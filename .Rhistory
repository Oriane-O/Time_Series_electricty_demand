power_diff96 <- diff(power_clean, lag = 96)
library(readxl)
library(forecast)
library(ggplot2)
data<-readxl::read_excel("2025-06-Elec-train (1).xlsx")
head(data)
power <- ts(data$`Power (kW)`,frequency = 96 ) # Frequency : 4 observations/hour * 24 hour = 96/day
plot(power, xlab = "Time (day)")
summary(power)
ggseasonplot(power, year.labels = TRUE, main = "Seasonal plot: Power consumption")
power_clean <- tsclean(power)  # replace the outliers
decomp <- stl(power_clean, s.window = "periodic", robust = TRUE)
autoplot(decomp)
ggtsdisplay(power_clean)
fit=Arima(elec_train,order=c(3,1,2),seasonal=c(1,1,2),lambda="auto")
fit=arima(elec_train,order=c(3,1,2),seasonal=c(1,1,2),lambda="auto")
fit=arima(elec_train,order=c(3,1,2),seasonal=c(1,1,2))
fit=arima(power_diff96,order=c(3,0,2),seasonal=c(1,0,2))
fit=arima(elec_train,order=c(3,1,2),seasonal=c(1,1,2))
Pacf(fit_auto$residuals)
library(forecast)
Pacf(fit_auto$residuals)
library(readxl)
library(forecast)
library(ggplot2)
data<-readxl::read_excel("2025-06-Elec-train (1).xlsx")
head(data)
power <- ts(data$`Power (kW)`,frequency = 96 ) # Frequency : 4 observations/hour * 24 hour = 96/day
plot(power, xlab = "Time (day)")
power_clean <- tsclean(power)  # replace the outliers
decomp <- stl(power_clean, s.window = "periodic", robust = TRUE)
autoplot(decomp)
elec_train=window(power_clean,start=c(1,1),end=c(50,96))
elec_test=window(power_clean,start=c(51,1))
power_diff96 <-(diff(power_clean, lag = 96))
ggtsdisplay(power_diff96)
power_diff96 <-diff(power_diff96)
ggtsdisplay(power_diff96)
Pacf(fit_auto$residuals)
Pacf(fit_auto$residuals)
Pacf(power_diff96, main = "PACF - Power")
Acf(power_diff96, main = "ACF - Power")
fit=arima(elec_train,order=c(3,1,2),seasonal=c(1,1,2))
checkresiduals(fit_auto)
library(readxl)
library(forecast)
library(ggplot2)
data<-readxl::read_excel("2025-06-Elec-train (1).xlsx")
head(data)
power <- ts(data$`Power (kW)`,frequency = 96 ) # Frequency : 4 observations/hour * 24 hour = 96/day
plot(power, xlab = "Time (day)")
summary(power)
ggseasonplot(power, year.labels = TRUE, main = "Seasonal plot: Power consumption")
power_clean <- tsclean(power)  # replace the outliers
decomp <- stl(power_clean, s.window = "periodic", robust = TRUE)
autoplot(decomp)
ggtsdisplay(power_clean)
elec_train=window(power_clean,start=c(48,1),end=c(50,96))
elec_test=window(power_clean,start=c(51,1))
power_diff96 <-(diff(power_clean, lag = 96))
ggtsdisplay(power_diff96)
power_diff96 <-diff(power_diff96)
ggtsdisplay(power_diff96)
fit_auto=auto.arima(
elec_train, seasonal = TRUE,
d = 1, D = 1,
allowmean = FALSE, allowdrift = FALSE,
stepwise = FALSE, approximation = TRUE  )
fit_auto=auto.arima(
elec_train, seasonal = TRUE,
d = 1, D = 1,
max_p=4, max_q=3, max_P=2, max_Q=2,,
stepwise = TRUE )
fit_auto=auto.arima(
elec_train, seasonal = TRUE,
d = 1, D = 1,
max_p=5, max_q=5, max_P=5, max_Q=5,
stepwise = TRUE )
elec_train=window(power_clean,start=c(48,1),end=c(50,96)) # we take fewer data to test our model more quickly
elec_test=window(power_clean,start=c(51,1))
fit_auto=auto.arima( elec_train )
fit_auto
checkresiduals(fit_auto)
elec_train=window(power_clean,start=c(48,1),end=c(50,96)) # we take fewer data to test our model more quickly
elec_test=window(power_clean,start=c(51,1))
plot(elec_train)
elec_train=window(power_clean,start=c(40,1),end=c(50,96)) # we take fewer data to test our model more quickly
elec_test=window(power_clean,start=c(51,1))
plot(elec_train)
fit_auto=auto.arima( elec_train )
fit_auto
checkresiduals(fit_auto)
pacf(fit_auto$residuals)
prev_auto=forecast(fit_auto,h=192)
print(sqrt(mean((prev_auto$mean-elec_test)^2)))
autoplot(elec_test)+autolayer(prev_auto$mean,series="auto SARIMA")
Pacf(power_diff96, main = "PACF - Power")
Acf(power_diff96, main = "ACF - Power")
fit=arima(elec_train,order=c(4,1,2),seasonal=c(2,1,1))
fit=arima(elec_train, order = c(4,1,2), seasonal = list(order = c(2,1,1), period = 96))
fit=arima(elec_train, order = c(3,1,2), seasonal = list(order = c(2,1,1), period = 96))
anyNA(elec_train)
ndiffs(elec_train); nsdiffs(elec_train, m=96)
elec_train=window(power_diff96,start=c(40,1),end=c(50,96)) # we take fewer data to test our model more quickly
elec_test=window(power_diff96,start=c(51,1))
plot(elec_train)
fit=arima(elec_train, order = c(3,1,2), seasonal = list(order = c(2,1,1), period = 96))
fit=forecast::arima(elec_train, order = c(3,1,2), seasonal = list(order = c(2,1,1), period = 96))
fit=arima(elec_train, order = c(3,1,2), seasonal = list(order = c(2,1,1), period = 96))
fit=arima(elec_train, order = c(1,1,2), seasonal = list(order = c(2,1,1), period = 96))
fit=arima(elec_train, order = c(0,1,4), seasonal = list(order = c(0,1,1), period = 96))
fit
fit=arima(elec_train, order = c(4,1,0), seasonal = list(order = c(2,1,0), period = 96))
fit=arima(elec_train, order = c(0,1,4), seasonal = list(order = c(0,1,2), period = 96))
fit
fit=arima(elec_train, order = c(1,1,4), seasonal = list(order = c(1,1,2), period = 96))
fit=arima(elec_train, order = c(0,1,4), seasonal = list(order = c(0,1,3), period = 96))
fit=arima(elec_train, order = c(0,1,4), seasonal = list(order = c(0,1,2), period = 96))
fit
library(readxl)
library(forecast)
library(ggplot2)
library(openxlsx)
install.packages("openxlsx")
library(readxl)
library(forecast)
library(ggplot2)
library(openxlsx)
